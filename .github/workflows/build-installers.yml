name: Build IT Hero Desktop Installers

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies and build React app
      run: |
        cd frontend
        npm install
        npm run build
        
    - name: Prepare desktop build
      run: |
        cd frontend
        cp package.json package.json.backup
        cp package-desktop.json package.json
        npm install
        
    - name: Build desktop app (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd frontend
        npx electron-builder --linux --publish=never
        
    - name: Build desktop app (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd frontend
        npx electron-builder --win --publish=never
        
    - name: Build desktop app (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd frontend
        npx electron-builder --mac --publish=never
        
    - name: Restore original package.json
      run: |
        cd frontend
        cp package.json.backup package.json
        
    - name: Upload Linux AppImage
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: IT-Hero-Linux
        path: frontend/dist/*.AppImage
        
    - name: Upload Windows Installer
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: IT-Hero-Windows
        path: frontend/dist/*.exe
        
    - name: Upload macOS DMG
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: IT-Hero-macOS
        path: frontend/dist/*.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "IT-Hero-Linux/*.AppImage,IT-Hero-Windows/*.exe,IT-Hero-macOS/*.dmg"
        token: ${{ secrets.GITHUB_TOKEN }}
        name: IT Hero Desktop v${{ github.ref_name }}
        body: |
          # ü¶∏‚Äç‚ôÇÔ∏è IT Hero Desktop v${{ github.ref_name }}
          
          ## üì• Download for your operating system:
          
          - **üêß Linux Users**: Download the `.AppImage` file
          - **ü™ü Windows Users**: Download the `.exe` file  
          - **üçé macOS Users**: Download the `.dmg` file
          
          ## üöÄ Installation Instructions:
          
          ### Linux:
          1. Download the AppImage file
          2. Make it executable: `chmod +x IT-Hero-*.AppImage`
          3. Double-click to run
          
          ### Windows:
          1. Download the .exe file
          2. Double-click to install
          3. Follow the installation wizard
          
          ### macOS:
          1. Download the .dmg file
          2. Double-click to open
          3. Drag IT Hero to Applications folder
          
          ## ‚ú® Features:
          - Complete IT Security & Diagnostic Toolkit
          - System monitoring and diagnostics
          - Network utilities and testing
          - Malware scanning with VirusTotal
          - Website security checking
          - Port scanning capabilities
          - No command line required!
        draft: false
        prerelease: false